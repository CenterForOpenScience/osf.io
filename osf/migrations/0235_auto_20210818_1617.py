# -*- coding: utf-8 -*-
# Generated by Django 1.11.28 on 2021-08-19 15:28
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import osf.models.base
import osf.utils.datetime_aware_jsonfield
import osf.utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('osf', '0234_auto_20210610_1812'),
    ]

    operations = [
        migrations.CreateModel(
            name='SchemaResponseBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('_id', models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24, unique=True)),
                ('schema_key', models.CharField(max_length=255)),
                ('response', osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(encoder=osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONEncoder)),
                ('source_block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osf.RegistrationSchemaBlock')),
            ],
            bases=(models.Model, osf.models.base.QuerySetExplainMixin),
        ),
        migrations.CreateModel(
            name='SchemaResponses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('_id', models.CharField(db_index=True, default=osf.models.base.generate_object_id, max_length=24, unique=True)),
                ('revision_justification', models.CharField(max_length=2048, null=True)),
                ('submitted_timestamp', osf.utils.fields.NonNaiveDateTimeField(null=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('initiator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('response_blocks', models.ManyToManyField(to='osf.SchemaResponseBlock')),
                ('schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osf.RegistrationSchema')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, osf.models.base.QuerySetExplainMixin),
        ),
        migrations.AlterModelOptions(
            name='adminprofile',
            options={'permissions': (('mark_spam', 'Can mark comments, projects and registrations as spam'), ('view_spam', 'Can view nodes, comments, and projects marked as spam'), ('view_metrics', 'Can view metrics on the OSF Admin app'), ('view_prereg', 'Can view entries for the preregistration chellenge on the admin'), ('administer_prereg', 'Can update, comment on, and approve entries to the prereg challenge'), ('view_desk', 'Can view details about Desk users'), ('delete_preprintrequest', 'Can delete preprints withdrawal requests'), ('change_preprintrequest', 'Can update preprints withdrawal requests'))},
        ),
        migrations.AddField(
            model_name='schemaresponseblock',
            name='source_revision',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revised_response_blocks', to='osf.SchemaResponses'),
        ),
        migrations.AlterUniqueTogether(
            name='schemaresponseblock',
            unique_together=set([('source_revision', 'source_block')]),
        ),
    ]
