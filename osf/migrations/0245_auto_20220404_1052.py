# Generated by Django 2.2.27 on 2022-04-04 10:52

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import osf.models.registrations
import osf.utils.datetime_aware_jsonfield


class Migration(migrations.Migration):

    dependencies = [
        ('addons_googledrive', '0004_rename_deleted_field'),
        ('addons_wiki', '0012_rename_deleted_field'),
        ('addons_dropbox', '0004_rename_deleted_field'),
        ('addons_s3', '0004_rename_deleted_field'),
        ('addons_forward', '0004_rename_deleted_field'),
        ('addons_bitbucket', '0003_rename_deleted_field'),
        ('addons_zotero', '0006_rename_deleted_field'),
        ('addons_osfstorage', '0006_rename_deleted_field'),
        ('addons_dataverse', '0004_rename_deleted_field'),
        ('addons_owncloud', '0005_rename_deleted_field'),
        ('addons_mendeley', '0004_rename_deleted_field'),
        ('addons_github', '0004_rename_deleted_field'),
        ('addons_onedrive', '0004_nodesettings_drive_id'),
        ('addons_gitlab', '0004_auto_20190627_2029'),
        ('addons_box', '0004_rename_deleted_field'),
        ('addons_figshare', '0004_rename_deleted_field'),
        ('osf', '0244_auto_20220324_1105'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='abstractnode',
            options={'base_manager_name': 'objects', 'permissions': (('view_node', 'Can view node details'), ('read_node', 'Can read the node'), ('write_node', 'Can edit the node'), ('admin_node', 'Can manage the node'))},
        ),
        migrations.AlterModelOptions(
            name='abstractprovider',
            options={'permissions': (('set_up_moderation', 'Can set up moderation for this provider'), ('view_submissions', 'Can view all submissions to this provider'), ('accept_submissions', 'Can accept submissions to this provider'), ('reject_submissions', 'Can reject submissions to this provider'), ('withdraw_submissions', 'Can withdraw submissions from this provider'), ('edit_review_comments', 'Can edit comments on actions for this provider'), ('view_actions', 'Can view actions on submissions to this provider'), ('add_moderator', 'Can add other users as moderators for this provider'), ('update_moderator', 'Can elevate or lower other moderators/admins'), ('remove_moderator', 'Can remove moderators from this provider. Implicitly granted to self'), ('edit_reviews_settings', 'Can edit reviews settings for this provider'), ('add_reviewer', 'Can add other users as reviewers for this provider'), ('assign_reviewer', 'Can assign reviewers to review specific submissions to this provider'), ('view_assigned_submissions', 'Can view submissions to this provider which have been assigned to this user'), ('review_assigned_submissions', 'Can submit reviews for submissions to this provider which have been assigned to this user'))},
        ),
        migrations.AlterModelOptions(
            name='adminprofile',
            options={'permissions': (('mark_spam', 'Can mark comments, projects and registrations as spam'), ('view_spam', 'Can view nodes, comments, and projects marked as spam'), ('view_metrics', 'Can view metrics on the OSF Admin app'), ('view_prereg', 'Can view entries for the preregistration chellenge on the admin'), ('administer_prereg', 'Can update, comment on, and approve entries to the prereg challenge'), ('view_desk', 'Can view details about Desk users'), ('delete_preprintrequest', 'Can delete preprints withdrawal requests'), ('change_preprintrequest', 'Can update preprints withdrawal requests'))},
        ),
        migrations.AlterModelOptions(
            name='brand',
            options={'permissions': (('modify_brand', 'Can modify brands'),)},
        ),
        migrations.AlterModelOptions(
            name='collection',
            options={'permissions': (('read_collection', 'Read Collection'), ('write_collection', 'Write Collection'), ('admin_collection', 'Admin Collection'))},
        ),
        migrations.AlterModelOptions(
            name='draftregistration',
            options={'permissions': (('read_draft_registration', 'Can read the draft registration'), ('write_draft_registration', 'Can edit the draft registration'), ('admin_draft_registration', 'Can manage the draft registration'))},
        ),
        migrations.AlterModelOptions(
            name='institution',
            options={'permissions': (('view_institutional_metrics', 'Can access metrics endpoints for their Institution'),)},
        ),
        migrations.AlterModelOptions(
            name='osfgroup',
            options={'permissions': (('view_group', 'Can view group details'), ('member_group', 'Has group membership'), ('manage_group', 'Can manage group membership'))},
        ),
        migrations.AlterModelOptions(
            name='preprint',
            options={'permissions': (('read_preprint', 'Can read the preprint'), ('write_preprint', 'Can write the preprint'), ('admin_preprint', 'Can manage the preprint'))},
        ),
        migrations.AlterField(
            model_name='abstractnode',
            name='moderation_state',
            field=models.CharField(choices=[('undefined', 'Undefined'), ('initial', 'Initial'), ('reverted', 'Reverted'), ('pending', 'Pending'), ('rejected', 'Rejected'), ('accepted', 'Accepted'), ('embargo', 'Embargo'), ('pending_embargo_termination', 'PendingEmbargoTermination'), ('pending_withdraw_request', 'PendingWithdrawRequest'), ('pending_withdraw', 'PendingWithdraw'), ('withdrawn', 'Withdrawn')], default='initial', max_length=30),
        ),
        migrations.AlterField(
            model_name='abstractnode',
            name='registered_meta',
            field=osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict, encoder=osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONEncoder),
        ),
        migrations.AlterField(
            model_name='abstractprovider',
            name='additional_providers',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None),
        ),
        migrations.AlterField(
            model_name='abstractprovider',
            name='preprint_word',
            field=models.CharField(choices=[('preprint', 'Preprint'), ('paper', 'Paper'), ('thesis', 'Thesis'), ('work', 'Work'), ('none', 'None')], default='preprint', max_length=10),
        ),
        migrations.AlterField(
            model_name='abstractprovider',
            name='subjects_acceptable',
            field=osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=list, encoder=osf.utils.datetime_aware_jsonfield.DateTimeAwareJSONEncoder),
        ),
        migrations.AlterField(
            model_name='basefilenode',
            name='target_content_type',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AlterField(
            model_name='basefilenode',
            name='target_object_id',
            field=models.PositiveIntegerField(blank=True, default=None, null=True),
        ),
        migrations.AlterField(
            model_name='collection',
            name='collected_types',
            field=models.ManyToManyField(limit_choices_to={'model__in': ['abstractnode', 'basefilenode', 'collection', 'preprint']}, related_name='_collection_collected_types_+', to='contenttypes.ContentType'),
        ),
        migrations.AlterField(
            model_name='draftregistration',
            name='provider',
            field=models.ForeignKey(default=osf.models.registrations.get_default_id, on_delete=django.db.models.deletion.CASCADE, related_name='draft_registrations', to='osf.AbstractProvider'),
        ),
        migrations.AlterField(
            model_name='pagecounter',
            name='action',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='pagecounter',
            name='file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pagecounters', to='osf.BaseFileNode'),
        ),
        migrations.AlterField(
            model_name='pagecounter',
            name='resource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pagecounters', to='osf.Guid'),
        ),
        migrations.AlterField(
            model_name='preprint',
            name='ever_public',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='preprint',
            name='provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preprints', to='osf.AbstractProvider'),
        ),
        migrations.AlterField(
            model_name='schemaresponse',
            name='initiator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='schemaresponse',
            name='previous_response',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_response', to='osf.SchemaResponse'),
        ),
        migrations.AlterField(
            model_name='schemaresponse',
            name='schema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='osf.RegistrationSchema'),
        ),
        migrations.DeleteModel(
            name='Node',
        ),
        migrations.DeleteModel(
            name='PreprintProvider',
        ),
        migrations.DeleteModel(
            name='Registration',
        ),
        migrations.DeleteModel(
            name='RegistrationProvider',
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osf.abstractnode',),
        ),
        migrations.CreateModel(
            name='PreprintProvider',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osf.abstractprovider',),
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osf.abstractnode',),
        ),
        migrations.CreateModel(
            name='RegistrationProvider',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osf.abstractprovider',),
        ),
    ]
