# Generated by Django 4.2.13 on 2025-08-06 16:41

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import osf.models.base
import osf.models.notification_type


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('osf', '0032_alter_osfgroupgroupobjectpermission_unique_together_and_more'),
    ]

    operations = [
        migrations.RunSQL(
            """
            DO $$
            DECLARE
                idx record;
            BEGIN
                FOR idx IN
                    SELECT indexname
                    FROM pg_indexes
                    WHERE tablename = 'osf_notificationsubscription'
                LOOP
                    EXECUTE format(
                        'ALTER INDEX %I RENAME TO %I',
                        idx.indexname,
                        replace(idx.indexname, 'osf_notificationsubscription', 'osf_notificationsubscription_legacy')
                    );
                END LOOP;
            END$$;
            """,
            reverse_sql="""
                DO $$
                DECLARE
                    idx record;
                BEGIN
                    FOR idx IN
                        SELECT indexname
                        FROM pg_indexes
                        WHERE tablename = 'osf_notificationsubscription_legacy'
                    LOOP
                        IF position('osf_notificationsubscription_legacy' in idx.indexname) > 0 THEN
                            EXECUTE format(
                                'ALTER INDEX %I RENAME TO %I',
                                idx.indexname,
                                replace(idx.indexname, 'osf_notificationsubscription_legacy', 'osf_notificationsubscription')
                            );
                        END IF;
                    END LOOP;
                END$$;
                """
        ),
        migrations.CreateModel(
            name='EmailTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('STARTED', 'Started'), ('SUCCESS', 'Success'), ('FAILURE', 'Failure'), ('RETRY', 'Retry')], default='PENDING', max_length=20)),
                ('error_message', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_context', models.JSONField()),
                ('sent', models.DateTimeField(blank=True, null=True)),
                ('seen', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='NotificationSubscriptionLegacy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('_id', models.CharField(db_index=True, max_length=100)),
                ('event_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'osf_notificationsubscription_legacy',
            },
            bases=(models.Model, osf.models.base.QuerySetExplainMixin),
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_interval_choices', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=32), blank=True, default=osf.models.notification_type.get_default_frequency_choices, size=None)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('template', models.TextField(help_text='Template used to render the event_info. Supports Django template syntax.')),
                ('subject', models.TextField(blank=True, help_text='Template used to render the subject line of email. Supports Django template syntax.', null=True)),
                ('object_content_type', models.ForeignKey(blank=True, help_text='Content type for subscribed objects. Null means global event.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Notification Type',
                'verbose_name_plural': 'Notification Types',
            },
        ),
        migrations.RemoveField(
            model_name='queuedmail',
            name='user',
        ),
        migrations.AlterModelOptions(
            name='notificationsubscription',
            options={'verbose_name': 'Notification Subscription', 'verbose_name_plural': 'Notification Subscriptions'},
        ),
        migrations.AlterUniqueTogether(
            name='notificationsubscription',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='abstractnode',
            name='child_node_subscriptions',
        ),
        migrations.RemoveField(
            model_name='osfuser',
            name='contributor_added_email_records',
        ),
        migrations.RemoveField(
            model_name='osfuser',
            name='group_connected_email_records',
        ),
        migrations.RemoveField(
            model_name='osfuser',
            name='member_added_email_records',
        ),
        migrations.AddField(
            model_name='notificationsubscription',
            name='_is_digest',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='notificationsubscription',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='notificationsubscription',
            name='message_frequency',
            field=models.CharField(max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='notificationsubscription',
            name='object_id',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='notificationsubscription',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.DeleteModel(
            name='NotificationDigest',
        ),
        migrations.DeleteModel(
            name='QueuedMail',
        ),
        migrations.AddField(
            model_name='notificationsubscriptionlegacy',
            name='email_digest',
            field=models.ManyToManyField(related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notificationsubscriptionlegacy',
            name='email_transactional',
            field=models.ManyToManyField(related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notificationsubscriptionlegacy',
            name='node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_subscriptions', to='osf.node'),
        ),
        migrations.AddField(
            model_name='notificationsubscriptionlegacy',
            name='none',
            field=models.ManyToManyField(related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notificationsubscriptionlegacy',
            name='provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_subscriptions', to='osf.abstractprovider'),
        ),
        migrations.AddField(
            model_name='notificationsubscriptionlegacy',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_subscriptions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='subscription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='osf.notificationsubscription'),
        ),
        migrations.AddField(
            model_name='emailtask',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='notificationsubscription',
            name='_id',
        ),
        migrations.RemoveField(
            model_name='notificationsubscription',
            name='email_digest',
        ),
        migrations.RemoveField(
            model_name='notificationsubscription',
            name='email_transactional',
        ),
        migrations.RemoveField(
            model_name='notificationsubscription',
            name='event_name',
        ),
        migrations.RemoveField(
            model_name='notificationsubscription',
            name='node',
        ),
        migrations.RemoveField(
            model_name='notificationsubscription',
            name='none',
        ),
        migrations.RemoveField(
            model_name='notificationsubscription',
            name='provider',
        ),
        migrations.AddField(
            model_name='notificationsubscription',
            name='notification_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='osf.notificationtype'),
        ),
        migrations.AlterUniqueTogether(
            name='notificationsubscriptionlegacy',
            unique_together={('_id', 'provider')},
        ),
    ]
