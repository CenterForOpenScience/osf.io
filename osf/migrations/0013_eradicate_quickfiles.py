# Generated by Django 3.2.17 on 2023-03-07 14:12

from django.db import migrations, models


class DeleteModelIfExist(migrations.DeleteModel):
    """T
    """

    def state_forwards(self, app_label, state):
        try:
            self.models[app_label, self.name_lower]
        except KeyError:
            return

        state.remove_model(app_label, self.name_lower)


class Migration(migrations.Migration):
    """
    This migration involves a change in the initial migration and so contains redundent operations to sync local and
    production environments.

    In order to completely eradicate quickfiles from the osf we have to remove the creation of that model in the initial
    migration (0001_initial.py). Because the record of the model is still in the production DB we want to delete it in
    this migration, but since it's now not in the initial migration we have to ignore it if it's not there in a local
    environment. This is all so the migration can later be safely squashed later and we can remove quickfiles from the
    initial migration.
    """

    dependencies = [
        ('osf', '0011_institution_rework_post_release'),
    ]

    operations = [
        DeleteModelIfExist(
            name='QuickFilesNode',
        ),
        migrations.AlterField(
            model_name='abstractnode',
            name='type',
            field=models.CharField(choices=[('osf.node', 'node'), ('osf.draftnode', 'draft node'), ('osf.registration', 'registration')], db_index=True, max_length=255),
        ),
    ]
