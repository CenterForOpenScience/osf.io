# Generated by Django 4.2.13 on 2024-07-15 13:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('osf', '0021_preprint_custom_publication_citation'),
    ]

    operations = [
        migrations.AlterField(
            model_name='abstractnode',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='%(class)ss', to='osf.subject'),
        ),
        migrations.AlterField(
            model_name='abstractnode',
            name='tags',
            field=models.ManyToManyField(related_name='%(class)s_tagged', to='osf.tag'),
        ),
        migrations.AlterField(
            model_name='abstractnode',
            name='type',
            field=models.CharField(choices=[('osf.draftnode', 'draft node'), ('osf.node', 'node'), ('osf.quickfilesnode', 'quick files node'), ('osf.registration', 'registration')], db_index=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='abstractprovider',
            name='type',
            field=models.CharField(choices=[('osf.collectionprovider', 'collection provider'), ('osf.preprintprovider', 'preprint provider'), ('osf.registrationprovider', 'registration provider')], db_index=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='basefilenode',
            name='tags',
            field=models.ManyToManyField(related_name='%(class)s_tagged', to='osf.tag'),
        ),
        migrations.AlterField(
            model_name='basefilenode',
            name='type',
            field=models.CharField(choices=[('osf.bitbucketfile', 'bitbucket file'), ('osf.bitbucketfilenode', 'bitbucket file node'), ('osf.bitbucketfolder', 'bitbucket folder'), ('osf.boxfile', 'box file'), ('osf.boxfilenode', 'box file node'), ('osf.boxfolder', 'box folder'), ('osf.dataversefile', 'dataverse file'), ('osf.dataversefilenode', 'dataverse file node'), ('osf.dataversefolder', 'dataverse folder'), ('osf.dropboxfile', 'dropbox file'), ('osf.dropboxfilenode', 'dropbox file node'), ('osf.dropboxfolder', 'dropbox folder'), ('osf.figsharefile', 'figshare file'), ('osf.figsharefilenode', 'figshare file node'), ('osf.figsharefolder', 'figshare folder'), ('osf.githubfile', 'github file'), ('osf.githubfilenode', 'github file node'), ('osf.githubfolder', 'github folder'), ('osf.gitlabfile', 'git lab file'), ('osf.gitlabfilenode', 'git lab file node'), ('osf.gitlabfolder', 'git lab folder'), ('osf.googledrivefile', 'google drive file'), ('osf.googledrivefilenode', 'google drive file node'), ('osf.googledrivefolder', 'google drive folder'), ('osf.onedrivefile', 'one drive file'), ('osf.onedrivefilenode', 'one drive file node'), ('osf.onedrivefolder', 'one drive folder'), ('osf.osfstoragefile', 'osf storage file'), ('osf.osfstoragefilenode', 'osf storage file node'), ('osf.osfstoragefolder', 'osf storage folder'), ('osf.owncloudfile', 'owncloud file'), ('osf.owncloudfilenode', 'owncloud file node'), ('osf.owncloudfolder', 'owncloud folder'), ('osf.s3file', 's3 file'), ('osf.s3filenode', 's3 file node'), ('osf.s3folder', 's3 folder'), ('osf.trashedfile', 'trashed file'), ('osf.trashedfilenode', 'trashed file node'), ('osf.trashedfolder', 'trashed folder')], db_index=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='collection',
            name='collected_types',
            field=models.ManyToManyField(limit_choices_to={'model__in': ['abstractnode', 'basefilenode', 'collection', 'preprint']}, related_name='+', to='contenttypes.contenttype'),
        ),
        migrations.AlterField(
            model_name='collectionsubmission',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='%(class)ss', to='osf.subject'),
        ),
        migrations.AlterField(
            model_name='draftregistration',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='%(class)ss', to='osf.subject'),
        ),
        migrations.AlterField(
            model_name='draftregistration',
            name='tags',
            field=models.ManyToManyField(related_name='%(class)s_tagged', to='osf.tag'),
        ),
        migrations.AlterField(
            model_name='noderequest',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_%(class)s', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='notificationsubscription',
            name='email_digest',
            field=models.ManyToManyField(related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='notificationsubscription',
            name='email_transactional',
            field=models.ManyToManyField(related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='notificationsubscription',
            name='none',
            field=models.ManyToManyField(related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='outcome',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='%(class)ss', to='osf.subject'),
        ),
        migrations.AlterField(
            model_name='outcome',
            name='tags',
            field=models.ManyToManyField(related_name='%(class)s_tagged', to='osf.tag'),
        ),
        migrations.AlterField(
            model_name='preprint',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='%(class)ss', to='osf.subject'),
        ),
        migrations.AlterField(
            model_name='preprint',
            name='tags',
            field=models.ManyToManyField(related_name='%(class)s_tagged', to='osf.tag'),
        ),
        migrations.AlterField(
            model_name='preprintrequest',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_%(class)s', to=settings.AUTH_USER_MODEL),
        ),
    ]
