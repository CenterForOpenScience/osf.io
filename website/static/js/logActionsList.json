{
    "project_created":  "${user} created ${node}",
    "project_created_from_draft_reg": "${node} was created from a draft registration",
    "project_registered": "${user} registered ${node}",
    "project_registered_no_user": "${node} registered",
    "prereg_registration_initiated": "${user} submitted for review to the Preregistration Challenge a registration of ${node}",
    "project_deleted":  "${user} deleted ${node}",
    "created_from":     "${user} created ${node} based on ${template}",
    "pointer_created":  "${user} created a link to ${pointer_category} ${pointer}",
    "pointer_forked":   "${user} forked a link to ${pointer_category} ${pointer}",
    "pointer_removed":  "${user} removed a link to ${pointer_category} ${pointer}",
    "group_added":    "${user} added ${group} to ${node}",
    "group_removed":  "${user} removed ${group} from ${node}",
    "group_updated":   "${user} changed ${group} permissions to ${node}",
    "made_public":  "${user} made ${node} public",
    "made_public_no_user":  "${node} made public",
    "made_private":     "${user} made ${node} private",
    "tag_added":    "${user} added tag ${tag} to ${node}",
    "tag_removed":  "${user} removed tag ${tag} from ${node}",
    "edit_title":   "${user} changed the title from ${title_original} to ${title_new}",
    "edit_description": "${user} edited description of ${node}",
    "category_updated": "${user} changed the category of ${node}",
    "article_doi_updated": "${user} changed the article_doi of ${node}",
    "updated_fields":   "${user} changed the ${updated_fields} for ${node}",
    "external_ids_added":   "${user} created external identifier(s) ${identifiers} on ${node}",
    "custom_citation_added" : "${user} created a custom citation for ${node}",
    "custom_citation_edited" : "${user} edited a custom citation for ${node}",
    "custom_citation_removed" : "${user} removed a custom citation from ${node}",
    "contributor_added":    "${user} added ${contributors} as contributor(s) to ${node}",
    "contributor_removed":  "${user} removed ${contributors} as contributor(s) from ${node}",
    "contributors_reordered":   "${user} reordered contributors for ${node}",
    "permissions_updated":   "${user} changed permissions for ${node}",
    "made_contributor_visible":     "${user} made non-bibliographic contributor ${contributors} a bibliographic contributor on ${node}",
    "made_contributor_invisible":   "${user} made bibliographic contributor ${contributors} a non-bibliographic contributor on ${node}",
    "wiki_updated":     "${user} updated wiki page ${page} to version ${version} of ${node}",
    "wiki_deleted":     "${user} deleted wiki page ${page} of ${node}",
    "wiki_renamed":     "${user} renamed wiki page ${old_page} to ${page} of ${node}",
    "made_wiki_public":     "${user} made the wiki of ${node} publicly editable",
    "made_wiki_private":    "${user} made the wiki of ${node} privately editable",
    "addon_added":  "${user} added addon ${addon} to ${node}",
    "addon_removed":    "${user} removed addon ${addon} from ${node}",
    "addon_file_moved":     "${user} moved ${source} to ${destination} in ${node}",
    "addon_file_copied":    "${user} copied ${source} to ${destination} in ${node}",
    "addon_file_renamed":   "${user} renamed ${source} to ${destination} in ${node}",
    "folder_created":   "${user} created a folder in ${node}",
    "file_added":   "${user} added file ${path} to ${node}",
    "file_updated":     "${user} updated file in ${node}",
    "file_removed":     "${user} removed ${path_type} ${path} from ${node}",
    "file_restored":    "${user} restored file ${path} from ${node}",
    "file_metadata_updated": "${user} updated the file metadata for ${path}",
    "checked_out":  "${user} checked out ${kind} ${path} from ${node}",
    "checked_in":   "${user} checked in ${kind} ${path} to ${node}",
    "comment_added":    "${user} added a comment ${comment_location} in ${node}",
    "comment_removed":  "${user} deleted a comment ${comment_location} in ${node}",
    "comment_restored":  "${user} restored a comment ${comment_location}  in ${node}",
    "comment_updated":  "${user} updated a comment ${comment_location} in ${node}",
    "embargo_initiated":    "${user} initiated an embargoed registration of ${node}",
    "embargo_approved":     "${user} approved embargoed registration of ${node}",
    "embargo_approved_no_user": "Embargo of registration of ${node} approved",
    "embargo_cancelled":    "${user} cancelled embargoed registration of ${node}",
    "embargo_completed":    "${user} completed embargo of ${node}",
    "embargo_completed_no_user": "Embargo for ${node} completed",
    "embargo_terminated": "Embargo for ${node} ended",
    "retraction_initiated":     "${user} initiated withdrawal of a registration of ${node}",
    "retraction_initiated_no_user": "A withdrawal of a registration of ${node} was proposed",
    "retraction_approved":  "${user} approved a withdrawal of a registration of ${node}",
    "retraction_approved_no_user":  "A withdrawal of a registration of ${node} was approved",
    "retraction_cancelled":     "${user} cancelled withdrawal of a registration of ${node}",
    "external_registration_created":    "A registration of ${node} was created on an external registry.",
    "external_registration_imported":   "A registration of ${node} was imported to OSF from an external registry.",
    "registration_initiated":   "${user} initiated a registration of ${node}",
    "registration_approved":    "${user} approved a registration of ${node}",
    "registration_approved_no_user": "Registration of ${node} was approved",
    "registration_cancelled":   "${user} cancelled a registration of ${node}",
    "node_created":     "${user} created ${node}",
    "node_forked":  "${user} created fork from ${forked_from}",
    "node_removed":  "${user} removed ${node}",
    "node_access_requests_enabled": "${user} enabled access requests for ${node}",
    "node_access_requests_disabled": "${user} disabled access requests for ${node}",
    "license_changed" : "${user} updated the license of ${node} ${license}",
    "file_tag_added": "${user} added tag ${tag} to ${path} in OSF Storage in ${node}",
    "file_tag_removed": "${user} removed tag ${tag} from ${path} in OSF Storage in ${node}",
    "osf_storage_file_added" : "${user} added file ${path} to OSF Storage in ${node}",
    "osf_storage_folder_created" : "${user} created folder ${path} in OSF Storage in ${node}",
    "osf_storage_file_updated" : "${user} updated file ${path} in OSF Storage in ${node}",
    "osf_storage_file_removed" : "${user} removed ${path_type} ${path} from OSF Storage in ${node}",
    "affiliated_institution_added": "${user} added ${institution} affiliation to ${node}",
    "affiliated_institution_removed": "${user} removed ${institution} affiliation from ${node}",
    "preprint_initiated": "${user} made ${node} a ${preprint} on ${preprint_provider} Preprints",
    "preprint_file_updated": "${user} updated the primary file of this ${preprint} on ${preprint_provider} Preprints",
    "preprint_license_updated": "${user} updated the license of this ${preprint} on ${preprint_provider} Preprints ${license}",
    "subjects_updated": "${user} updated the subjects on ${node}",
    "view_only_link_added": "${user} created ${anonymous_link} view-only link to ${node}",
    "view_only_link_removed": "${user} removed ${anonymous_link} view-only link to ${node}",
    "has_coi_updated": "${user} changed the conflict of interest statement availability for ${preprint}.",
    "coi_statement_updated": "${user} changed the conflict of interest statement for ${preprint}.",
    "has_data_links_updated": "${user} has updated the has links to data field to ${value}",
    "data_links_updated": "${user} has updated their data links",
    "why_no_data_updated": "${user} has updated their data statement",
    "has_prereg_links_updated": "${user} has updated their preregistration data link availability to ${value}",
    "prereg_links_updated": "${user} has updated their preregistration data links",
    "why_no_prereg_updated": "${user} has updated their preregistration data availability statement",
    "prereg_links_info_updated": "${user} has updated their preregistration links to ${value}"
}
